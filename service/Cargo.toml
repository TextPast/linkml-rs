[package]
name = "rootreal-model-symbolic-linkml"
version = "2.0.0"
edition = "2024"
authors = ["Simon C. Kemper <textpast@textpast.com>"]
license = "CC-BY-NC-4.0"
description = "LinkML schema validation service with 100% Python parity and TypeQL generation"
repository = "https://github.com/simonckemper/rootreal"
keywords = ["linkml", "schema", "validation", "typeql", "codegen"]
categories = ["data-structures", "encoding", "parser-implementations", "development-tools"]
readme = "README.md"
autoexamples = false
autotests = false

[package.metadata]
alias = "linkml-service"
[features]
default = []
database = ["dep:sqlx"]  # Database support for PostgreSQL and MySQL (no SQLite to avoid burn conflicts)
linkml_full_tests = []
linkml_examples = []
test-utils = []  # Test utilities for external testing

[dependencies]

# Async runtime
tokio = { version = "1.42", features = ["full"] }
async-trait = "0.1"
futures = "0.3"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
serde_urlencoded = "0.7"

# Bitflags for efficient flag management
bitflags = { version = "2.4", features = ["serde"] }

# Pattern matching
regex = "1.10"
pcre2 = "0.2"  # For full PCRE2 support with named capture groups

# Date/time and URL validation
chrono = { version = "0.4", features = ["serde"] }
url = "2.5"

# XML parsing
quick-xml = "0.31"

# Collections
indexmap = { version = "2.2", features = ["serde"] }
dashmap = { workspace = true }
lru = "0.13"
once_cell = "1.19"

# Excel generation
rust_xlsxwriter = "0.89.1"

# TypeDB integration
typedb-driver = "3.4.0"
base64 = "0.22"

# String case conversion
convert_case = "0.6"

# Error handling
thiserror = "2.0"
anyhow = { workspace = true }

# Validation compilation
quote = "1.0"
syn = { version = "2.0", features = ["full"] }

# Performance
rayon = "1.8"
parking_lot = "0.12"
arc-swap = "1.6"
blake3 = "1.5"
num_cpus = "1.16"
bincode = "1.3"
xxhash-rust = { version = "0.8", features = ["xxh3"] }
smallvec = "1.13"

# Cryptography
sha2 = "0.10"

# Plugin system
dlopen = "0.1"
dlopen_derive = "0.1"
semver = { version = "1.0", features = ["serde"] }
toml = "0.8"
petgraph = "0.6"
dirs = "5.0"
glob = "0.3"
hostname = "0.4"

# File operations
walkdir = "2.4"
notify = "7.0"
csv = "1.3"

# RDF support
oxigraph = "0.5.0"

# Database support - PostgreSQL and MySQL only (no SQLite to avoid burn conflicts)
# Use unified sqlx dependency from workspace
sqlx = { workspace = true, optional = true }

# HTTP client and server
reqwest = { version = "0.12", features = ["json", "stream"] }
axum = { version = "0.8", features = ["json", "tokio"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["cors", "trace"] }

# System info
sysinfo = "0.33"
uuid = { version = "1.11", features = ["v4"] }

# Tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# CLI
clap = { version = "4.4", features = ["derive"] }
colored = "2.1"
indicatif = "0.17"
rustyline = "14.0"
rootreal-model-symbolic-linkml-core = { workspace = true }
rootreal-hub-api-web-rest-core = { workspace = true }
rootreal-hub-web-frontend-framework-frontend = { workspace = true }
rootreal-core-application-lifecycle-shutdown-core = { workspace = true }
logger_core = { workspace = true }
rootreal-core-foundation-timestamp = { workspace = true }
task_management_core = { workspace = true }
error_handling_core = { workspace = true }
memory_core = { workspace = true }
configuration_core = { workspace = true }
cache_core = { workspace = true }
telemetry_core = { workspace = true }
rootreal-database-lakehouse-core = { workspace = true }
rootreal-data-parsing-parse-core = { workspace = true }
rootreal-core-resilience-timeout-core = { workspace = true }
random_core = { workspace = true }
rootreal-core-foundation-random = { workspace = true }
rootreal-security-identity-authentication-core = { workspace = true }
rootreal-security-crypto-hash-core = { workspace = true }
rootreal-optimization-resilience-rate-limiting-core = { workspace = true }
rootreal-database-vector-core = { workspace = true }

dbms_core = { workspace = true }
dbms_service = { workspace = true }
error_handling_service = { workspace = true }
hash_service = { workspace = true }
linkml_core = { workspace = true }
monitoring_core = { workspace = true }
monitoring_service = { workspace = true }
parse_core = { workspace = true }
random_service = { workspace = true }
shutdown_service = { workspace = true }
telemetry_service = { workspace = true }
timeout_core = { workspace = true }
timeout_service = { workspace = true }
timestamp_core = { workspace = true }
vector_database_service = { workspace = true }
[dev-dependencies]
tokio = { version = "1.42", features = ["full", "test-util"] }
pretty_assertions = "1.4"
proptest = "1.3"
criterion = "0.5"
tempfile = "3.8"
futures = "0.3"
insta = "1.34"
once_cell = "1.19"
tokio-test = "0.4"
rand = "0.8"  # For test RngCore implementation
[[example]]
name = "linkml_batch_processing"
path = "examples/batch_processing.rs"

[[bench]]
name = "validation_benchmarks"
harness = false

[[bench]]
name = "generation_benchmarks"
harness = false

[[bench]]
name = "parsing_benchmarks"
harness = false

[[bench]]
name = "expression_benchmarks"
harness = false

[[bench]]
name = "typeql_generation_benchmarks"
harness = false

[[bench]]
name = "linkml_benchmarks"
harness = false

[[bench]]
name = "performance_bench"
harness = false

[[bench]]
name = "validation_bench"
harness = false

[[test]]
name = "basic_smoke"
path = "tests/basic_smoke.rs"

[[bin]]
name = "linkml"
path = "src/bin/linkml.rs"
